#!/bin/bash   
### BEGIN INIT INFO 
# Provides: monoserve.sh 
# Required-Start: $local_fs $syslog $remote_fs 
# Required-Stop: $local_fs $syslog $remote_fs 
# Default-Start: 2 3 4 5 
# Default-Stop: 0 1 6 
# Short-Description: Start FastCGI Mono server with hosts 
### END INIT INFO   

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin 
DAEMON=/usr/bin/mono NAME=monoserver DESC=monoserver   

## Begin -- MAKE CHANGES HERE -- 
PROGRAM=fastcgi-mono-server4 # The program which will be started 
ADDRESS=127.0.0.1 # The address on which the server will listen 
PORT=9001 # The port on which the server will listen 
USER=www-data # The user under which the process will run 
GROUP=$USER # The group under which the process will run 
## End -- MAKE CHANGES HERE --   

# Determine the environment 

MONOSERVER=$(which $PROGRAM) 
MONOSERVER_PID="" 
FCGI_CONFIG_DIR=/etc/mono/fcgi/apps-enabled   

# Start up the Mono server 
start_up() 
{ 
	get_pid 
	if [ -z "$MONOSERVER_PID" ]; then 
		echo "Configured Applications" 
		echo "-----------------------" # Construct the application list if the configuration directory exists 
		if [ -d $FCGI_CONFIG_DIR ]; then 
			MONO_FCGI_APPLICATIONS="" 
			for file in $( ls $FCGI_CONFIG_DIR ); do 
				if [ "$MONO_FCGI_APPLICATIONS" != "" ]; then 
					MONO_FCGI_APPLICATIONS=$MONO_FCGI_APPLICATIONS,
				fi
				MONO_FCGI_APPLICATIONS=$MONO_FCGI_APPLICATIONS`cat $FCGI_CONFIG_DIR/$file`
			done
			#export MONO_FCGI_APPLICATIONS 
			echo -e ${MONO_FCGI_APPLICATIONS//,/"\n"} 
		else 
			echo "None (config directory $FCGI_CONFIG_DIR not found)" 
		fi 
		echo

		# Start the server
		start-stop-daemon -S -c $USER:$GROUP -x $MONOSERVER -- /applications=$MONO_FCGI_APPLICATIONS /socket=tcp:$ADDRESS:$PORT &

		echo "Mono FastCGI Server $PROGRAM started as $USER on $ADDRESS:$PORT" 
	else 
		echo "Mono FastCGI Server is already running - PID $MONOSERVER_PID" 
	fi 
}   

# Shut down the Mono server 
shut_down() 
{ 
	get_pid 
	if [ -n "$MONOSERVER_PID" ]; then 
		kill $MONOSERVER_PID 
		echo "Mono FastCGI Server stopped" 
	else 
		echo "Mono FastCGI Server is not running" 
	fi 
}   

# Refresh the PID 
get_pid() 
{ 
	MONOSERVER_PID=$(ps auxf | grep $PROGRAM.exe | grep -v grep | awk '{print $2}') 
}

case "$1" in 
	start) 
		start_up 
	;; 
	stop) 
		shut_down 
	;; 
	restart|force-reload) 
		shut_down start_up 
	;; 
	status) 
		get_pid 
		if [ -z "$MONOSERVER_PID" ]; then 
			echo "Mono FastCGI Server is not running" 
		else 
			echo "Mono FastCGI Server is running - PID $MONOSERVER_PID" 
		fi 
	;; 
	*) 
		echo "Usage: monoserve (start|stop|restart|force-reload|status)" 
	;;
esac

exit 0 #- See more at: http://techblog.djs-consulting.com/2010/mono-fastcgi-startup-script.html
